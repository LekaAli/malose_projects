# Generated by Django 2.0 on 2019-11-14 19:04

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('seasonality', '__first__'),
        ('dates', '0001_initial'),
        ('rampup', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='CostOfSale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=75, null=True)),
                ('percentage', models.PositiveSmallIntegerField(default=0, help_text='Cost of sale value should be a percentage')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Cost Of Sale',
                'verbose_name_plural': 'Cost Of Sales',
            },
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=120, null=True)),
                ('is_fixed', models.BooleanField()),
                ('value', models.DecimalField(decimal_places=2, max_digits=15)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Expense',
                'verbose_name_plural': 'Expenses',
            },
        ),
        migrations.CreateModel(
            name='GrossProfit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'January'), (2, 'February'), (3, 'March'), (4, 'April'), (5, 'May'), (6, 'June'), (7, 'July'), (8, 'August'), (9, 'September'), (10, 'October'), (11, 'November'), (12, 'December')], help_text='Month value from when a product projection begun until the end of the financial year', null=True)),
                ('cost_of_sale_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('gross_profit_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('cost_of_sale', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cost_of_sale', to='products.CostOfSale')),
                ('financial_year', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gross_profit_f_year', to='dates.FinancialYear')),
            ],
            options={
                'verbose_name': 'Gross Profit',
                'verbose_name_plural': 'Gross Profits',
            },
        ),
        migrations.CreateModel(
            name='NetProfit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('net_profit', models.FloatField(default=0.0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('financial_year', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='net_profit_f_year', to='dates.FinancialYear')),
            ],
            options={
                'verbose_name': 'Net Profit',
                'verbose_name_plural': 'Net Profits',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('projection_start', models.PositiveSmallIntegerField(choices=[(1, 'January'), (2, 'February'), (3, 'March'), (4, 'April'), (5, 'May'), (6, 'June'), (7, 'July'), (8, 'August'), (9, 'September'), (10, 'October'), (11, 'November'), (12, 'December')], null=True)),
                ('average_unit_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('average_quantity_per_month', models.PositiveIntegerField(default=1)),
                ('average_revenue_per_month', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.CreateModel(
            name='ProductSeasonalityRampUp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_link', to='products.Product')),
                ('rampup', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rampup', to='rampup.RampUp')),
                ('seasonality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='seasonality', to='seasonality.Seasonality')),
            ],
            options={
                'verbose_name': 'Product Seasonality Ramp Up Link',
                'verbose_name_plural': 'Product Seasonality Ramp Up Links',
            },
        ),
        migrations.CreateModel(
            name='ProfitBeforeTax',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'January'), (2, 'February'), (3, 'March'), (4, 'April'), (5, 'May'), (6, 'June'), (7, 'July'), (8, 'August'), (9, 'September'), (10, 'October'), (11, 'November'), (12, 'December')], null=True)),
                ('gross', models.FloatField(default=0.0)),
                ('expense', models.FloatField(default=0.0)),
                ('monthly_gross_value', models.FloatField(default=0.0)),
                ('total_gross_value', models.FloatField(default=0.0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('financial_year', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profit_before_tax_f_year', to='dates.FinancialYear')),
            ],
            options={
                'verbose_name': 'Profit Before Tax',
                'verbose_name_plural': 'Profit Before Taxes',
            },
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('month_sale', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('total_sale_revenue', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('period', models.PositiveSmallIntegerField(default=1)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_sale', to='products.Product')),
            ],
            options={
                'verbose_name': 'Product Sale',
                'verbose_name_plural': 'Product Sales',
            },
        ),
        migrations.CreateModel(
            name='Tax',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tax_percentage', models.FloatField(default=1.0)),
                ('profit_loss_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('total_tax_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('financial_year', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tax_f_year', to='dates.FinancialYear')),
            ],
            options={
                'verbose_name': 'Tax',
                'verbose_name_plural': 'Taxes',
            },
        ),
        migrations.AddField(
            model_name='grossprofit',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_gross_profit', to='products.Product'),
        ),
    ]
